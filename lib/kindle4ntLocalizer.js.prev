/*vim: et:ts=4:sw=4:sts=4 */
/*jslint node: true */
/*jslint todo: true */
/*jslint nomen: true */

/*!
 * kindle4ntLocalizer
 * Copyright(c) 2013-2014 Uli Fuchs <ufuchs@gmx.com>
 * MIT Licensed
 *
 * [ However beautiful the strategy, you should occasionally look at ]
 * [ the results.                              - Winston Churchill - ]
 */

/**
 * Dependencies
 */

var fn = require("when/function"),
    when = require('when'),
    Proto = require('./localizer.js');


(function () {

    'use strict';

    /**
     * Localizer for the extracted weather data.
     *
     * @return Object
     *
     * @api public
     */

    function Localizer(locales) {
        Proto.call(this, locales);
    }

    Localizer.prototype = Object.create(Proto.prototype);
    Localizer.prototype.constructor = Localizer;


    //
    // @param {wfo} Object - the workflow object
    //
    Localizer.forecasts = function (p) {
        return when.join(
            createForecast(p, 1),
            createForecast(p, 2),
            createForecast(p, 3)
        )
            .then(function (day) {
                p.localized.forecastday = day;
                return p;
            });
    };


    /**
     * Localizes the given `wfo` object.
     *
     * @param {wfo} Object - the workflow object
     *
     * @api public
     */

    Localizer.prototype.localize = function (wfo, dayNum) {
        return fn.call(dayZero, {weather : wfo.weather, localized : wfo.localized}, dayNum || 0)
            .then(forecasts)
            .then(footer)
//            .then(finalizeStage)
            .then(function () {
                return wfo;
            }, function (err) {
                console.log(err);
            });
    };

    ///////////////////////////////////////////////////////////////////////////

    /**
     * Expose `localizer`.
     */

    // CommonJS module is defined
    if (module !== 'undefined' && module.exports) {
        module.exports = Localizer;
    }

}());
